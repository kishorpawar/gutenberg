# Generated by Django 5.2.1 on 2025-05-21 14:05

import django.contrib.postgres.indexes
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_year', models.SmallIntegerField(blank=True, null=True)),
                ('death_year', models.SmallIntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'books_author',
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['name'], name='author_name_trgm', opclasses=['gin_trgm_ops'])],
            },
        ),
        migrations.CreateModel(
            name='Bookshelf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'db_table': 'books_bookshelf',
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['name'], name='bookshelf_name_trgm', opclasses=['gin_trgm_ops'])],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4, unique=True)),
            ],
            options={
                'db_table': 'books_language',
                'indexes': [models.Index(fields=['code'], name='language_code_idx')],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'books_subject',
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['name'], name='subject_name_trgm', opclasses=['gin_trgm_ops'])],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('download_count', models.IntegerField(blank=True, null=True)),
                ('gutenberg_id', models.IntegerField(unique=True)),
                ('media_type', models.CharField(max_length=16)),
                ('title', models.CharField(blank=True, max_length=1024, null=True)),
                ('authors', models.ManyToManyField(db_table='books_book_authors', related_name='books', to='books.author')),
                ('bookshelves', models.ManyToManyField(db_table='books_book_bookshelves', related_name='books', to='books.bookshelf')),
                ('languages', models.ManyToManyField(db_table='books_book_languages', related_name='books', to='books.language')),
                ('subjects', models.ManyToManyField(db_table='books_book_subjects', related_name='books', to='books.subject')),
            ],
            options={
                'db_table': 'books_book',
            },
        ),
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mime_type', models.CharField(max_length=32)),
                ('url', models.CharField(max_length=256)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formats', to='books.book')),
            ],
            options={
                'db_table': 'books_format',
                'indexes': [models.Index(fields=['mime_type'], name='format_mime_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['download_count'], name='book_download_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=django.contrib.postgres.indexes.GinIndex(fields=['title'], name='book_title_trgm', opclasses=['gin_trgm_ops']),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['gutenberg_id'], name='book_gutenberg_id_idx'),
        ),
    ]
